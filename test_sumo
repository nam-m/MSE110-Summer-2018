#pragma config(Sensor, S2,     Color,          sensorEV3_Color)
#pragma config(Sensor, S3,     Ultra,          sensorEV3_Ultrasonic)
#pragma config(Motor,  motorA,          leftMotor,     tmotorEV3_Large, PIDControl, driveLeft, encoder)
#pragma config(Motor,  motorD,          rightMotor,    tmotorEV3_Large, PIDControl, driveRight, encoder)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

task main()
{
	int light_grade;
	int left_speed;
	int right_speed;
	int min;
	int black = 53; //45-50
	int white = 7; //6-7
	//int yellow = ;
	int offset = (black + white)/2; //(target track edge) attempt to make it integer
	while(true)
	{
		light_grade = getColorReflected(Color);
		displayBigTextLine(5,"Color: %d", light_grade);
		//initial movement
		//...
		
		//robot moves towards edge  
		if (light_grade < 8)
		{
			//left_speed = getMotorRPM(leftMotor);
   		//right_speed = getMotorRPM(rightMotor);
			if (getMotorRPM(leftMotor) <= getMotorRPM(rightMotor))
				min = getMotorRPM(leftMotor);
			else
				min = getMotorRPM(rightMotor);
			
      if (min < 50)
      {
      	//check ultrasonic
      	if (getUSDistance(Ultra) <= 3)
				{
					//push back
				}
				else
				{
      		setMotorSync(leftMotor, rightMotor, 0, -1*(min + 50));
      		//search for opponent
      	}
      }
			else // min >= 50
			{
				setMotorSync(leftMotor, rightMotor, 0, -1*min);
				//search for opponent
			}
		}

		}
		
	}

}
